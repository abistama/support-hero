/*
 * This file is generated by jOOQ.
 */
package com.abistama.supporthero.infrastructure.generated.tables.records


import com.abistama.supporthero.infrastructure.generated.tables.SlackToJiraTenant

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SlackToJiraTenantRecord() : UpdatableRecordImpl<SlackToJiraTenantRecord>(SlackToJiraTenant.SLACK_TO_JIRA_TENANT) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var slackTenantId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var jiraTenantId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised SlackToJiraTenantRecord
     */
    constructor(id: UUID? = null, slackTenantId: UUID? = null, jiraTenantId: UUID? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.slackTenantId = slackTenantId
        this.jiraTenantId = jiraTenantId
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
