/*
 * This file is generated by jOOQ.
 */
package com.abistama.supporthero.infrastructure.generated.tables.records


import com.abistama.supporthero.infrastructure.generated.tables.SlackTenant

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SlackTenantRecord() : UpdatableRecordImpl<SlackTenantRecord>(SlackTenant.SLACK_TENANT) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var accessToken: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var expiresIn: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var refreshToken: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var tokenType: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var scopes: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var slackTeamId: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var slackEnterpriseId: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var domain: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(10, value)
        get(): LocalDateTime? = get(10) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised SlackTenantRecord
     */
    constructor(id: UUID? = null, accessToken: String? = null, expiresIn: LocalDateTime? = null, refreshToken: String? = null, tokenType: String? = null, scopes: String? = null, slackTeamId: String? = null, slackEnterpriseId: String? = null, domain: String? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.accessToken = accessToken
        this.expiresIn = expiresIn
        this.refreshToken = refreshToken
        this.tokenType = tokenType
        this.scopes = scopes
        this.slackTeamId = slackTeamId
        this.slackEnterpriseId = slackEnterpriseId
        this.domain = domain
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
