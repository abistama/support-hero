/*
 * This file is generated by jOOQ.
 */
package com.abistama.supporthero.infrastructure.generated.tables.records


import com.abistama.supporthero.infrastructure.generated.tables.JiraTicketCsat

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JiraTicketCsatRecord() : UpdatableRecordImpl<JiraTicketCsatRecord>(JiraTicketCsat.JIRA_TICKET_CSAT) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var ticketKey: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var projectKey: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var slackToJiraTenantId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var csatValue: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var sendTo: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var numberReminders: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var nextReminderAt: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised JiraTicketCsatRecord
     */
    constructor(id: UUID? = null, ticketKey: String? = null, projectKey: String? = null, slackToJiraTenantId: UUID? = null, csatValue: Int? = null, sendTo: String? = null, numberReminders: Int? = null, nextReminderAt: LocalDateTime? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.ticketKey = ticketKey
        this.projectKey = projectKey
        this.slackToJiraTenantId = slackToJiraTenantId
        this.csatValue = csatValue
        this.sendTo = sendTo
        this.numberReminders = numberReminders
        this.nextReminderAt = nextReminderAt
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
