/*
 * This file is generated by jOOQ.
 */
package com.abistama.supporthero.infrastructure.generated.tables.records


import com.abistama.supporthero.infrastructure.generated.tables.Shedlock

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ShedlockRecord() : UpdatableRecordImpl<ShedlockRecord>(Shedlock.SHEDLOCK) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var lockUntil: LocalDateTime?
        set(value): Unit = set(1, value)
        get(): LocalDateTime? = get(1) as LocalDateTime?

    open var lockedAt: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var lockedBy: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised ShedlockRecord
     */
    constructor(name: String? = null, lockUntil: LocalDateTime? = null, lockedAt: LocalDateTime? = null, lockedBy: String? = null): this() {
        this.name = name
        this.lockUntil = lockUntil
        this.lockedAt = lockedAt
        this.lockedBy = lockedBy
        resetChangedOnNotNull()
    }
}
